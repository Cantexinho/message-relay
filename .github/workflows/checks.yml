---
name: Checks

on: [push]

jobs:
  test-lint:
    name: Test and test-lint
    runs-on: ubuntu-20.04
    env:
      SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
      SERVICE_PASSWORD: ${{ secrets.SERVICE_PASSWORD }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}
      MYSQL_USER: ${{ secrets.MYSQL_USER }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
      MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
      SCHEDULER_INTERVAL: ${{ secrets.SCHEDULER_INTERVAL }}
      ENDPOINT_TO_POST: ${{ secrets.ENDPOINT_TO_POST }}
      DATA_JSON_PATH: ${{ secrets.DATA_JSON_PATH }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and Run Containers
        run: |
          docker-compose up -d --build
      - name: Wait for MySQL service to become available
        run: |
          echo "Waiting for MySQL service to become available..."
          until docker-compose exec -T db mysqladmin ping -h"$MYSQL_HOST" -P"$MYSQL_PORT" -u"$MYSQL_USER" -p"$MYSQL_PASSWORD"; do
            sleep 1
          done
          echo "MySQL service is now available."
      - name: Run Tests for event-consumer
        run: |
          docker-compose exec -T event-consumer pytest tests/
      - name: Run Flake8 for event-consumer
        run: |
          docker-compose exec -T event-consumer flake8 .
      - name: Run Tests for event-propagator
        run: |
          docker-compose exec -T event-propagator pytest tests/
      - name: Run Flake8 for event-propagator
        run: |
          docker-compose exec -T event-propagator flake8 .
      - name: Stop Containers
        if: always()
        run: |
          docker-compose down